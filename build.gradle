plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'jacoco'
    id "org.sonarqube" version "3.0"
    id 'checkstyle'
    id("net.ltgt.errorprone") version "1.2.1"
    id "org.owasp.dependencycheck" version "6.0.1"

}

allprojects {

    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'org.sonarqube'
    apply plugin: 'checkstyle'
    apply plugin: 'net.ltgt.errorprone'
    apply plugin: "org.owasp.dependencycheck"




    group = 'com.example'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '1.8'

    repositories {
        mavenCentral()
    }

    dependencies {
        errorprone("com.google.errorprone:error_prone_core:2.4.0")
        errorproneJavac("com.google.errorprone:javac:9+181-r4173-1")
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        testImplementation 'junit:junit:4.13'
        compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '8.0.1'

        compileOnly 'org.projectlombok:lombok:1.18.12'
        annotationProcessor 'org.projectlombok:lombok:1.18.12'

        testCompileOnly 'org.projectlombok:lombok:1.18.12'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'

    }

    test {
        useJUnitPlatform()
    }

    jacocoTestReport {
        reports {
            xml.enabled true
            csv.enabled false
            html.enabled true
        }
    }

    test {
        finalizedBy jacocoTestReport // report is always generated after tests run
    }
    jacocoTestReport {
        dependsOn test // tests are required to run before generating the report
    }

    //this plugin is useless to run since sonarqube has its own plugin, its good only to perform a localcheck
    checkstyle {
        toolVersion '8.36.1';    // good practice to add a version in combination with checkstyle.xml
        configFile = rootProject.file("config/checkstyle/checkstyle_latest.xml")
    }

    tasks.withType(Checkstyle) {
        reports {
            xml.enabled true
            html.enabled true
        }
    }

    dependencyCheck {
//        autoUpdate=false
        cveValidForHours=1
        format='ALL'
    }

    check.dependsOn dependencyCheckAggregate


    tasks.withType(JavaCompile).configureEach {
        options.errorprone.disableWarningsInGeneratedCode = true
        options.errorprone.enabled = false
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    bootJar {
        enabled = false
    }

    jar {
        enabled = true
    }
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.host.url", "http://localhost:8081/"
        property "sonar.login", "6430fb78121a5bece235385fca096d58940eca76"
        property "sonar.dependencyCheck.reportPath", "${project.buildDir}/reports/dependency-check-report.xml"
        property "sonar.dependencyCheck.htmlReportPath", "${project.buildDir}/reports/dependency-check-report.html"
    }

}